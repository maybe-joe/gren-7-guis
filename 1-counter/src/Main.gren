module Main exposing ( main )

import Browser
import Html exposing ( Html )
import Html.Attributes as Attribute
import Html.Events as Event


main =
    Browser.sandbox
        { init = init
        , update = update
        , view = view
        }


type alias Model =
    Int


init : Model
init =
    0


type Msg
    = Clicked


update : Msg -> Model -> Model
update msg model =
    case msg of
        Clicked ->
            model + 1


view : Model -> Html Msg
view model =
    Html.div
        []
        [ stylesheet "../public/styles.css"
        , box
            [ cluster
                [ Html.input
                    [ Attribute.readonly True
                    , Attribute.value
                        <| String.fromInt model
                    ]
                    []
                , Html.button
                    [ Event.onClick Clicked
                    ]
                    [ Html.text "Count"
                    ]
                ]
            ]
        ]


stylesheet : String -> Html Msg
stylesheet href =
    Html.node
        "link"
        [ Attribute.attribute "rel" "stylesheet"
        , Attribute.attribute "href" href
        ]
        []


cluster : Array (Html Msg) -> Html Msg
cluster children =
    Html.div
        [ Attribute.class "cluster"
        ]
        children


box : Array (Html Msg) -> Html Msg
box children =
    Html.div
        [ Attribute.class "box"
        ]
        children
